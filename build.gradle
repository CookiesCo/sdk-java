plugins {
    id "java-library"
    id "maven-publish"
    id "com.google.cloud.artifactregistry.gradle-plugin" version "2.1.4"
    id "org.sonarqube" version "3.3"
    id "jacoco"
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group "co.cookies.sdk"
archivesBaseName = "sdk-java"
version "v1.2021r1-beta5"

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    api group: "io.grpc", name: "grpc-stub", version: "1.37.0"
    api group: "io.grpc", name: "grpc-protobuf", version: "1.37.0"
    api group: "io.grpc", name: "grpc-netty-shaded", version: "1.37.0"
    api group: "com.google.api", name: "gax", version: "2.6.1"
    api group: "com.google.api", name: "gax-grpc", version: "2.6.1"
    api group: "org.slf4j", name: "slf4j-api", version: "1.7.32"
    api group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    api group: "co.cookies.sdk", name: "gapic-sdk-catalog-v1-java", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk.grpc", name: "grpc-sdk-catalog-v1-java", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk.proto", name: "proto-sdk-catalog-v1-java", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk", name: "gapic-sdk-storefront-v1-java", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk.grpc", name: "grpc-sdk-storefront-v1-java", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk.proto", name: "proto-sdk-storefront-v1-java", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk", name: "proto-catalog", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk", name: "proto-cookies", version: "v1.2021r1beta5"
    api group: "co.cookies.sdk", name: "proto-storefront", version: "v1.2021r1beta5"
    compileOnly group: "com.google.auto.value", name: "auto-value-annotations", version: "1.8.2"
    runtimeOnly group: "ch.qos.logback", name: "logback-classic", version: "1.2.6"
    annotationProcessor group: "com.google.auto.value", name: "auto-value", version: "1.8.2"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.google.truth.extensions:truth-proto-extension:1.1.3"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc.options.addStringOption("Xdoclint:none", "-quiet")

sonarqube {
    properties {
        property "sonar.projectKey", "CookiesCo_sdk-java"
        property "sonar.organization", "cookies"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name "gcloud"
            url "artifactregistry://us-maven.pkg.dev/cookies-co/sdk-java"
        }
        repositories {
            maven {
                name = "github"
                url = uri("https://maven.pkg.github.com/CookiesCo/sdk-java")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        (repository.name == findProperty("artifactRepository"))
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

repositories {
    maven {
        name "gcloud"
        url "artifactregistry://us-maven.pkg.dev/cookies-co/sdk-java"
    }
    maven {
        name "opencannabis"
        url "artifactregistry://us-maven.pkg.dev/opencannabis-sdk/java"
    }
    maven {
        name = "github"
        url = uri("https://maven.pkg.github.com/CookiesCo/sdk-java")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    google()
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    useJUnitPlatform()
}

check.dependsOn jacocoTestReport

if (hasProperty("buildScan")) {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

if (hasProperty("ungate") || hasProperty("ungate-stage")) {
    nexusPublishing {
        repositories {
            sonatype {
                nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
                snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            }
        }
    }
}
